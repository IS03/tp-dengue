#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Script para corregir los nombres de departamentos "capital" en los archivos de dengue
agregando el nombre de la provincia correspondiente
"""

import pandas as pd
import os
import glob

def corregir_capitales_dengue():
    """
    Corrige los nombres de departamentos que son "capital" en todos los archivos de dengue
    agregando el nombre de la provincia correspondiente
    """
    
    # Directorio base
    directorio_dengue = "/Users/ignaciosenestrari/Facu/tp-dengue/dataset-dengue"
    
    # A√±os a procesar
    a√±os = [2018, 2020, 2021, 2022, 2023, 2024, 2025]
    
    total_archivos_procesados = 0
    total_registros_modificados = 0
    
    print("=== CORRECCI√ìN DE CAPITALES EN ARCHIVOS DE DENGUE ===\n")
    
    for a√±o in a√±os:
        archivo_csv = os.path.join(directorio_dengue, f"dengue-{a√±o}.csv")
        
        # Verificar que el archivo existe
        if not os.path.exists(archivo_csv):
            print(f"‚ö†Ô∏è  Archivo no encontrado: dengue-{a√±o}.csv")
            continue
        
        try:
            print(f"üìÅ Procesando: dengue-{a√±o}.csv")
            
            # Leer el archivo CSV
            df = pd.read_csv(archivo_csv)
            
            # Mostrar informaci√≥n inicial
            print(f"   Total de registros: {len(df)}")
            
            # Contar cu√°ntos "capital" hay antes de la correcci√≥n
            capitales_antes = df[df['departamento_nombre'].str.lower() == 'capital']
            registros_a_modificar = len(capitales_antes)
            
            print(f"   Registros con 'capital' encontrados: {registros_a_modificar}")
            
            if registros_a_modificar > 0:
                print("   Registros que ser√°n modificados:")
                for idx, row in capitales_antes.iterrows():
                    print(f"     - Fila {idx + 2}: '{row['departamento_nombre']}' -> '{row['provincia_nombre']} capital'")
            
            # Aplicar la correcci√≥n
            # Buscar filas donde departamento_nombre sea "capital" (case insensitive)
            mask = df['departamento_nombre'].str.lower() == 'capital'
            
            # Para esas filas, cambiar el nombre agregando la provincia
            df.loc[mask, 'departamento_nombre'] = df.loc[mask, 'provincia_nombre'] + ' capital'
            
            # Contar los cambios realizados
            cambios_realizados = mask.sum()
            print(f"   ‚úÖ Correcci√≥n aplicada a {cambios_realizados} registros")
            
            # Guardar el archivo modificado
            df.to_csv(archivo_csv, index=False)
            print(f"   üíæ Archivo guardado exitosamente")
            
            total_archivos_procesados += 1
            total_registros_modificados += cambios_realizados
            
            # Mostrar los registros modificados
            if cambios_realizados > 0:
                capitales_despues = df[df['departamento_nombre'].str.contains('capital', case=False, na=False)]
                print(f"   Registros modificados:")
                for idx, row in capitales_despues.iterrows():
                    print(f"     - Fila {idx + 2}: '{row['departamento_nombre']}'")
            
            print()  # L√≠nea en blanco para separar archivos
            
        except Exception as e:
            print(f"   ‚ùå Error al procesar el archivo: {e}")
            print()
    
    # Resumen final
    print("=== RESUMEN FINAL ===")
    print(f"üìä Archivos procesados: {total_archivos_procesados}")
    print(f"üìä Total de registros modificados: {total_registros_modificados}")
    
    if total_registros_modificados > 0:
        print("‚úÖ ¬°Correcci√≥n completada exitosamente!")
    else:
        print("‚ÑπÔ∏è  No se encontraron registros con 'capital' para modificar")

def verificar_archivos():
    """
    Funci√≥n auxiliar para verificar qu√© archivos existen
    """
    directorio_dengue = "/Users/ignaciosenestrari/Facu/tp-dengue/dataset-dengue"
    a√±os = [2018, 2020, 2021, 2022, 2023, 2024, 2025]
    
    print("=== VERIFICACI√ìN DE ARCHIVOS ===")
    for a√±o in a√±os:
        archivo_csv = os.path.join(directorio_dengue, f"dengue-{a√±o}.csv")
        if os.path.exists(archivo_csv):
            print(f"‚úÖ dengue-{a√±o}.csv - Existe")
        else:
            print(f"‚ùå dengue-{a√±o}.csv - No encontrado")
    print()

if __name__ == "__main__":
    # Primero verificar qu√© archivos existen
    verificar_archivos()
    
    # Luego procesar los archivos
    corregir_capitales_dengue()
