-- Estructura de Base de Datos para Datos de Dengue
-- Unificando datos de calendario, clima, estaciones meteorológicas y población

-- Tabla de Dimensiones: Fecha (desde calendario.csv)
CREATE TABLE dim_fecha (
    fecha_id SERIAL PRIMARY KEY,
    fecha DATE NOT NULL UNIQUE,
    anio INTEGER NOT NULL,
    mes INTEGER NOT NULL,
    dia INTEGER NOT NULL,
    trimestre INTEGER NOT NULL,
    semestre INTEGER NOT NULL,
    quincena INTEGER NOT NULL,
    semana_mes INTEGER NOT NULL,
    semana INTEGER NOT NULL,
    dia_semana VARCHAR(20) NOT NULL,
    dia_numero_semana INTEGER NOT NULL,
    bisiesto BOOLEAN NOT NULL
);

-- Tabla de Dimensiones: Ubicación (desde estaciones-meteorologicas-inta.csv y poblacion.csv)
CREATE TABLE dim_ubicacion (
    ubicacion_id SERIAL PRIMARY KEY,
    provincia VARCHAR(100) NOT NULL,
    departamento VARCHAR(100) NOT NULL,
    localidad VARCHAR(100),
    latitud DECIMAL(10,6),
    longitud DECIMAL(10,6),
    altura DECIMAL(10,2),
    ubicacion_detalle TEXT
);

-- Tabla de Dimensiones: Estación Meteorológica (desde estaciones-meteorologicas-inta.csv)
CREATE TABLE dim_estacion (
    estacion_id SERIAL PRIMARY KEY,
    id_estacion INTEGER NOT NULL UNIQUE,
    nombre VARCHAR(200) NOT NULL,
    tipo VARCHAR(100),
    ubicacion_id INTEGER REFERENCES dim_ubicacion(ubicacion_id),
    id_interno VARCHAR(50),
    desde DATE,
    hasta DATE
);

-- Tabla de Dimensiones: Población (desde poblacion.csv)
CREATE TABLE dim_poblacion (
    poblacion_id SERIAL PRIMARY KEY,
    ubicacion_id INTEGER REFERENCES dim_ubicacion(ubicacion_id),
    anio INTEGER NOT NULL,
    poblacion DECIMAL(15,2) NOT NULL
);

-- Tabla de Hechos: Datos Climáticos (desde datos_clima_transformados.parquet)
CREATE TABLE fact_clima (
    clima_id SERIAL PRIMARY KEY,
    fecha_id INTEGER REFERENCES dim_fecha(fecha_id),
    estacion_id INTEGER REFERENCES dim_estacion(estacion_id),
    temperatura_max DECIMAL(5,2),
    temperatura_min DECIMAL(5,2),
    temperatura_media DECIMAL(5,2),
    humedad_relativa DECIMAL(5,2),
    precipitacion DECIMAL(8,2),
    velocidad_viento DECIMAL(5,2),
    direccion_viento DECIMAL(5,2),
    presion_atmosferica DECIMAL(7,2),
    radiacion_solar DECIMAL(8,2),
    -- Agregar otros campos climáticos según el dataset
    fecha_registro TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Tabla de Hechos: Casos de Dengue (si hay datos de dengue, asumiendo estructura)
-- CREATE TABLE fact_dengue (
--     dengue_id SERIAL PRIMARY KEY,
--     fecha_id INTEGER REFERENCES dim_fecha(fecha_id),
--     ubicacion_id INTEGER REFERENCES dim_ubicacion(ubicacion_id),
--     casos_confirmados INTEGER DEFAULT 0,
--     casos_sospechosos INTEGER DEFAULT 0,
--     hospitalizaciones INTEGER DEFAULT 0,
--     muertes INTEGER DEFAULT 0,
--     fecha_registro TIMESTAMP DEFAULT CURRENT_TIMESTAMP
-- );

-- Índices para optimización de consultas
CREATE INDEX idx_dim_fecha_fecha ON dim_fecha(fecha);
CREATE INDEX idx_dim_fecha_anio_mes ON dim_fecha(anio, mes);
CREATE INDEX idx_dim_ubicacion_provincia ON dim_ubicacion(provincia);
CREATE INDEX idx_dim_ubicacion_departamento ON dim_ubicacion(departamento);
CREATE INDEX idx_dim_estacion_ubicacion ON dim_estacion(ubicacion_id);
CREATE INDEX idx_dim_poblacion_ubicacion_anio ON dim_poblacion(ubicacion_id, anio);
CREATE INDEX idx_fact_clima_fecha ON fact_clima(fecha_id);
CREATE INDEX idx_fact_clima_estacion ON fact_clima(estacion_id);
CREATE INDEX idx_fact_clima_fecha_estacion ON fact_clima(fecha_id, estacion_id);

-- Comentarios adicionales:
-- 1. La tabla dim_ubicacion unifica localidades de estaciones y población
-- 2. Los datos climáticos se almacenan en fact_clima con referencias a fecha y estación
-- 3. La población se maneja como dimensión temporal (por año)
-- 4. Se pueden agregar más tablas de hechos según necesidad (ej: dengue, mosquitos, etc.)
-- 5. Considerar particionamiento por fecha en tablas de hechos para grandes volúmenes
-- 6. Usar constraints de integridad referencial para mantener consistencia
-- 7. Implementar triggers o procedimientos para actualizaciones automáticas si es necesario